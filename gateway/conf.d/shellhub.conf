server {
    {{ if and (bool (env.Getenv "SHELLHUB_AUTO_SSL")) (ne (env.Getenv "SHELLHUB_ENV") "development") -}}
    listen 443 reuseport ssl{{ if bool (env.Getenv "SHELLHUB_PROXY") }} proxy_protocol{{ end }} backlog={{ env.Getenv "BACKLOG_SIZE" }};
    ssl_certificate /etc/letsencrypt/live/{{ env.Getenv "SHELLHUB_DOMAIN" }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ env.Getenv "SHELLHUB_DOMAIN" }}/privkey.pem;

    ssl_session_cache shared:le_nginx_SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;

    ssl_dhparam /etc/letsencrypt/live/{{ env.Getenv "SHELLHUB_DOMAIN" }}/dhparam.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";
    {{ else -}}
    listen 80 reuseport{{ if bool (env.Getenv "SHELLHUB_PROXY") }} proxy_protocol{{ end }} backlog={{ env.Getenv "BACKLOG_SIZE" }};
    {{- end }}
    {{ if bool (env.Getenv "SHELLHUB_PROXY") }}
    set_real_ip_from ::/0;
    real_ip_header proxy_protocol;
    {{ end }}
    server_name {{ (env.Getenv "SHELLHUB_DOMAIN") }};
    resolver 127.0.0.11 ipv6=off;

    # Load configuration files for the default server block
    include /etc/nginx/default.d/*.conf;

    location /healthcheck {
        return 200;
    }

    location / {
        set $upstream ui:8080;

        add_header Cache-Control "no-cache, no-store";
        add_header Pragma "no-cache";

        proxy_pass http://$upstream;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_http_version 1.1;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }

    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";

        root /etc/letsencrypt;
    }

    location /api {
        set $upstream api:8080;

        auth_request /auth;
        auth_request_set $tenant_id $upstream_http_x_tenant_id;
        auth_request_set $username $upstream_http_x_username;
        auth_request_set $id $upstream_http_x_id;
        auth_request_set $api_key $upstream_http_x_api_key;
        auth_request_set $role $upstream_http_x_role;
        error_page 500 =401 /auth;
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_set_header X-ID $id;
        proxy_set_header X-Tenant-ID $tenant_id;
        proxy_set_header X-Username $username;
        proxy_set_header X-Request-ID $request_id;
        proxy_set_header X-Api-Key $api_key;
        proxy_set_header X-Role $role;
        proxy_pass http://$upstream;
    }

    location ~ ^/(install.sh|kickstart.sh)$ {
        set $upstream api:8080;
        rewrite ^/(.*)$ /api/install break;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Proto $x_forwarded_proto;
        proxy_set_header X-Forwarded-Port $x_forwarded_port;
        proxy_pass http://$upstream;
    }

    location /api/auth/user {
        set $upstream api:8080;

        auth_request /auth/skip;
        auth_request_set $tenant_id $upstream_http_x_tenant_id;
        auth_request_set $username $upstream_http_x_username;
        auth_request_set $id $upstream_http_x_id;
        auth_request_set $role $upstream_http_x_role;
        error_page 500 =401 /auth;
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_set_header X-ID $id;
        proxy_set_header X-Tenant-ID $tenant_id;
        proxy_set_header X-Username $username;
        proxy_set_header X-Request-ID $request_id;
        proxy_set_header X-Role $role;
        proxy_pass http://$upstream;
    }

    {{ if eq (env.Getenv "SHELLHUB_ENV") "development" -}}
    location /openapi/preview {
        set $upstream openapi:8080;
        rewrite ^/openapi/preview/?(.*)$ /$1 break;
        proxy_pass http://$upstream;
    }

    location /openapi/mock {
        set $upstream openapi:4010;
        rewrite ^/openapi/mock/?(.*)$ /$1 break;
        proxy_pass http://$upstream;
    }

    location /openapi/proxy {
        set $upstream openapi:4020;
        rewrite ^/openapi/proxy/?(.*)$ /$1 break;
        proxy_pass http://$upstream;
    }
    {{- end }}

    {{ if bool (env.Getenv "SHELLHUB_ENTERPRISE") -}}
    location /admin/dashboard/ {
        set $upstream dashboard:8080;
        add_header Cache-Control "no-cache, no-store";
        add_header Pragma "no-cache";

    {{ if ne (env.Getenv "SHELLHUB_ENV") "development" -}}
        rewrite ^/admin/dashboard/(.*)$ /$1 break;
    {{- end }}

        proxy_pass http://$upstream;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_http_version 1.1;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }

    location ~ ^/admin/?$ {
        rewrite ^/admin/?$ /admin/dashboard permanent;
    }

    location /admin {
        set $upstream admin-api:8080;
        error_page 500 =401;
        rewrite ^/admin/(.*)$ /$1 break;
        proxy_pass http://$upstream;
    }
    {{ end -}}

    location /ssh/connection {
        set $upstream ssh:8080;
        auth_request /auth;
        auth_request_set $tenant_id $upstream_http_x_tenant_id;
        auth_request_set $device_uid $upstream_http_x_device_uid;
        proxy_pass http://$upstream;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        {{ if bool (env.Getenv "SHELLHUB_PROXY") -}}
        proxy_set_header X-Real-IP $proxy_protocol_addr;
        {{ else -}}
        proxy_set_header X-Real-IP $x_real_ip;
        {{ end -}}
        proxy_set_header X-Tenant-ID $tenant_id;
        proxy_set_header X-Device-UID $device_uid;
        proxy_http_version 1.1;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }

    location /ssh/revdial {
        set $upstream ssh:8080;
        proxy_pass http://$upstream;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        {{ if bool (env.Getenv "SHELLHUB_PROXY") -}}
        proxy_set_header X-Real-IP $proxy_protocol_addr;
        {{ else -}}
        proxy_set_header X-Real-IP $x_real_ip;
        {{ end -}}
        proxy_http_version 1.1;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }

    location /ssh/auth {
        set $upstream api:8080;
        auth_request /auth;
        auth_request_set $device_uid $upstream_http_x_device_uid;
        error_page 500 =401 /auth;
        proxy_pass http://$upstream;
        proxy_set_header X-Device-UID $device_uid;
    }

    {{ if bool (env.Getenv "SHELLHUB_CLOUD") -}}
    location /api/announcements {
        set $upstream cloud-api:8080;
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$upstream;
    }
    {{ end -}}

    {{ if bool (env.Getenv "SHELLHUB_CLOUD") -}}
    location /api/billing {
        set $upstream billing-api:8080;
        auth_request /auth;
        auth_request_set $tenant_id $upstream_http_x_tenant_id;
        auth_request_set $username $upstream_http_x_username;
        auth_request_set $id $upstream_http_x_id;
        auth_request_set $role $upstream_http_x_role;
        error_page 500 =401 /auth;
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_set_header X-Tenant-ID $tenant_id;
        proxy_set_header X-Username $username;
        proxy_set_header X-ID $id;
        proxy_set_header X-Role $role;
        proxy_pass http://$upstream;
    }
    {{ end -}}

    {{ if bool (env.Getenv "SHELLHUB_CLOUD") -}}
    location /api/connector {
        set $upstream cloud-api:8080;
        auth_request /auth;
        auth_request_set $tenant_id $upstream_http_x_tenant_id;
        auth_request_set $username $upstream_http_x_username;
        auth_request_set $id $upstream_http_x_id;
        auth_request_set $role $upstream_http_x_role;
        error_page 500 =401 /auth;
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_set_header X-Tenant-ID $tenant_id;
        proxy_set_header X-Username $username;
        proxy_set_header X-ID $id;
        proxy_set_header X-Role $role;
        proxy_pass http://$upstream;
    }
    {{ end -}}

    {{ if bool (env.Getenv "SHELLHUB_ENTERPRISE") -}}
    location /api/firewall {
        set $upstream cloud-api:8080;
        auth_request /auth;
        auth_request_set $tenant_id $upstream_http_x_tenant_id;
        auth_request_set $username $upstream_http_x_username;
        auth_request_set $id $upstream_http_x_id;
        auth_request_set $role $upstream_http_x_role;
        error_page 500 =401 /auth;
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_set_header X-Tenant-ID $tenant_id;
        proxy_set_header X-Username $username;
        proxy_set_header X-ID $id;
        proxy_set_header X-Role $role;
        proxy_pass http://$upstream;
    }
    {{ end -}}

    {{ if bool (env.Getenv "SHELLHUB_ENTERPRISE") -}}
    location /api/user/mfa {
        set                    $upstream cloud-api:8080;
        auth_request           /auth;
        auth_request_set $id   $upstream_http_x_id;
        error_page             500 =401 /auth;
        rewrite ^/api/(.*)$    /api/$1 break;
        proxy_set_header       X-ID $id;
        proxy_set_header       X-Real-IP $x_real_ip;
        proxy_pass             http://$upstream;
    }

    location /api/user/mfa/auth {
        set                    $upstream cloud-api:8080;
        auth_request           off;
        rewrite ^/api/(.*)$    /api/$1 break;
        proxy_set_header       X-Forwarded-Host $host;
        proxy_set_header       X-Real-IP $x_real_ip;
        proxy_pass             http://$upstream;
    }

    location /api/user/mfa/recover {
        set                    $upstream cloud-api:8080;
        auth_request           off;
        rewrite ^/api/(.*)$    /api/$1 break;
        proxy_set_header       X-Forwarded-Host $host;
        proxy_set_header       X-Real-IP $x_real_ip;
        proxy_pass             http://$upstream;
    }

    location /api/user/mfa/reset {
        set                    $upstream cloud-api:8080;
        auth_request           off;
        rewrite ^/api/(.*)$    /api/$1 break;
        proxy_set_header       X-Forwarded-Host $host;
        proxy_set_header       X-Real-IP $x_real_ip;
        proxy_pass             http://$upstream;
    }
    {{ end -}}

    {{ if bool (env.Getenv "SHELLHUB_ENTERPRISE") -}}
    location /api/register {
        set $upstream cloud-api:8080;
        proxy_set_header    X-Forwarded-Host $host;
        proxy_pass http://$upstream;
    }
    {{ end -}}

    {{ if bool (env.Getenv "SHELLHUB_CLOUD") -}}
    location /api/user/recover_password {
        set $upstream cloud-api:8080;
        proxy_set_header    X-Forwarded-Host $host;
        proxy_pass http://$upstream;
    }
    {{ end -}}

    {{ if bool (env.Getenv "SHELLHUB_CLOUD") -}}
    location ~* /api/user/(.*)/update_password {
        set $upstream cloud-api:8080;
        proxy_pass http://$upstream;
    }
    {{ end -}}

    {{ if bool (env.Getenv "SHELLHUB_CLOUD") -}}
    location /api/user/resend_email {
        set $upstream cloud-api:8080;
        proxy_set_header    X-Forwarded-Host $host;
        proxy_pass http://$upstream;
    }
    {{ end -}}

    {{ if bool (env.Getenv "SHELLHUB_CLOUD") -}}
    location /api/user/validation_account {
        set $upstream cloud-api:8080;
        proxy_pass http://$upstream;
    }
    {{ end -}}

    {{ if bool (env.Getenv "SHELLHUB_ENTERPRISE") -}}
    location ~* /api/sessions/(.*)/record {
        set $upstream cloud-api:8080;
        auth_request /auth;
        auth_request_set $tenant_id $upstream_http_x_tenant_id;
        auth_request_set $username $upstream_http_x_username;
        auth_request_set $role $upstream_http_x_role;
        error_page 500 =401 /auth;
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_set_header X-Tenant-ID $tenant_id;
        proxy_set_header X-Username $username;
        proxy_set_header X-Role $role;
        proxy_pass http://$upstream;
    }
    {{ end -}}

    {{ if bool (env.Getenv "SHELLHUB_ENTERPRISE") -}}
    location ~* /api/sessions/(.*)/play {
        set $upstream cloud-api:8080;
        auth_request /auth;
        auth_request_set $tenant_id $upstream_http_x_tenant_id;
        auth_request_set $username $upstream_http_x_username;
        auth_request_set $role $upstream_http_x_role;
        error_page 500 =401 /auth;
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_set_header X-Tenant-ID $tenant_id;
        proxy_set_header X-Username $username;
        proxy_set_header X-Role $role;
        proxy_pass http://$upstream;
    }
    {{ end -}}

    location ~* /api/sessions/(.*)/close {
        set $upstream ssh:8080;
        auth_request /auth;
        auth_request_set $tenant_id $upstream_http_x_tenant_id;
        auth_request_set $role $upstream_http_x_role;
        error_page 500 =401 /auth;
        rewrite ^/api/(.*)$ /$1 break;
        proxy_set_header X-Tenant-ID $tenant_id;
        proxy_set_header X-Role $role;
        proxy_pass http://$upstream;
    }

    location /api/devices/auth {
        set $upstream api:8080;
        auth_request off;
        rewrite ^/api/(.*)$ /api/$1 break;
        {{ if bool (env.Getenv "SHELLHUB_PROXY") -}}
        proxy_set_header X-Real-IP $proxy_protocol_addr;
        {{ else -}}
        proxy_set_header X-Real-IP $x_real_ip;
        {{ end -}}
        proxy_pass http://$upstream;
    }

    location /api/login {
        set $upstream api:8080;
        auth_request off;
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$upstream;
    }

    location /api/webhook-billing {
        set $upstream billing-api:8080;
        auth_request off;
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$upstream;
    }

    location /auth {
        set $upstream_auth api:8080;
        internal;
        rewrite ^/(.*)$ /internal/$1 break;
        proxy_pass http://$upstream_auth;
    }

    location /auth/skip {
        set $upstream_auth api:8080;
        internal;
        rewrite ^/auth/(.*)$ /internal/auth?args=$1 break;
        proxy_pass http://$upstream_auth;
    }

    location /ws {
        set $upstream ssh:8080;
        proxy_pass http://$upstream;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;

        {{ if bool (env.Getenv "SHELLHUB_PROXY") -}}
        proxy_set_header X-Real-IP $proxy_protocol_addr;
        {{ else -}}
        proxy_set_header X-Real-IP $x_real_ip;
        {{ end -}}
        proxy_http_version 1.1;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }

    location /info {
        set $upstream api:8080;

        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $x_forwarded_port;
        proxy_pass http://$upstream;
        rewrite ^/(.*)$ /api/info break;
    }

    location = /nginx_status {
        stub_status;
        allow 127.0.0.1;
        allow {{ env.Getenv "HOST_IP" }};
        deny all;
    }
}

{{- $PUBLIC_URL_DOMAIN := or (env.Getenv "SHELLHUB_PUBLIC_URL_DOMAIN") (env.Getenv "SHELLHUB_DOMAIN") }}
server {
   listen 80;
   server_name ~^(?<namespace>.+)\.(?<device>.+)\.{{ $PUBLIC_URL_DOMAIN }}$;
   resolver 127.0.0.11 ipv6=off;

   location / {
       set $upstream ssh:8080;

       rewrite ^/(.*)$ /ssh/http break;
       proxy_set_header X-Public-URL-Address $device;
       proxy_set_header X-Path /$1$is_args$args;
       proxy_pass http://$upstream;
   }
}

{{ if and (bool (env.Getenv "SHELLHUB_AUTO_SSL")) (ne (env.Getenv "SHELLHUB_ENV") "development") -}}
server {
    listen 80 default_server;

    return 308 https://$host$request_uri;
}
{{- end }}
